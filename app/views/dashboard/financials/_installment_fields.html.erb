<div class="nested-fields">
  <div class="p-3">
    <div class="form-row justify-content-lg-center">
      <div class="row">
        <div class="form-group col-md-2 col-lg-4">
          <%= f.label :number %>
          <%= f.text_field :number, class: "form-control", readonly: true %>
        </div>
        <div class="form-group col-md-2 col-lg-4">
          <%= f.label :name %>
          <%= f.text_field :name, class: "form-control" %>
        </div>
        <div class="form-group col-md-2 col-lg-4">
          <%= f.label :payment_value %>
          <%= f.number_field :payment_value, step: 0.01, class: "form-control pay_value" %>
        </div>
      </div>
      <hr>
      <div class="row">
        <div class="form-group col-md-2 col-lg-4">
          <%= f.label :due_date %>
          <%= f.date_field :due_date, class: "form-control" %>
        </div>
        <div class="form-group col-md-2 col-lg-4">
          <%= f.label :payment_date %>
          <%= f.date_field :payment_date, class: "form-control" %>
        </div>
        <div class="form-group col-md-4 col-lg-4">
          <%= f.label :status %>
          <div class="form-check form-check-inline">
            <%=  f.collection_radio_buttons :status, Installment.statuses.map{ |a| [a.first,a.first] }, :first, :second  do |b| %>
              <div class="form-check form-check-inline">
                <%= b.radio_button class: "form-check-input" %>
                <%= b.label class: "form-check-label" %>
              </div>
            <% end %>
          </div>
        </div>
      </div>
      <div class="row mb-4">
        <div class="form-group col-md-12 col-lg-12">
          <%= f.label :note %>
          <%= f.text_field :note, class: "form-control h-100" %>
        </div>
      </div>
    </div>
  </div>
  <div class="px-4 mb-4 text-center">
    <%= link_to_remove_association "#{t ("buttons_default.remove_transaction")}", f, class: "btn app-btn-danger w-25 theme-btn mx-auto", onclick: "calculateSub();" %>
  </div>
</div>
<script>

$(document).ready(function () {
  $(".pay_value").each(
    function () {
      $(this).keyup(
        function () {
          calculateSum()
        });
    });
  $('input.pay_value').keyup(function (event) {
    // skip for arrow keys
    if (event.which >= 37 && event.which <= 40) {
      event.preventDefault();
    }
    var $this = $(this);
    var num = $this.val().replace(/,/gi, "").split("").reverse().join("");
    var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
    console.log(num2);

    $this.val(num2);
  });
   $(".pay_value").each(
    function () {
      //debugger
      console.log("Pay", this.value);
    });
});

function calculateSum() {
  var sum = 0;
  var sub = $(".pay_value").val();
  $(".pay_value").each(
    function () {
      var vl = this.value.replace(',', '');
      if (!isNaN(vl) && vl.length != 0) {
        sum += parseFloat(vl);
      }
    });
  $("#sum").val(sum.toFixed(2));
}

function checkSum() {
  var matches = [];
var inputs = document.getElementsByTagName('input');
for (var i = 0; i < inputs.length; ++i) {
  var value = inputs[i].value;
  if(value === $('#sum').val()) {
        matches.push(value);
  }else{
    $('#sum').val('')
}
 console.log(matches);
}
}

function calculateSub() {
  checkSum();
  var sum = parseFloat($("#sum").val());
  var sub = parseFloat($(".pay_value").val());
  var total = 0
  $(".pay_value").each(
    function () {
      if (sub > 0) {        
        var vl = this.value.replace(',', '');
              
        if (!isNaN(vl) && vl.length != 0) {
          sub += parseFloat(vl);
          total = sum - sub;
          if (total < 0) {
            total = Math.abs(total);
          }
        } 
      }
    });

  $("#sum").val(total.toFixed(2));
 
}

function RemoveRougeChar(convertString) {
  if (convertString.substring(0, 1) == ",") {
    return convertString.substring(1, convertString.length)
  }
  return convertString;
}
</script>

